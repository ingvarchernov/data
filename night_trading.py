#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üåô –ù–Ü–ß–ù–ò–ô –†–ï–ñ–ò–ú –¢–û–†–ì–Ü–í–õ–Ü
–û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π –¥–ª—è –¥–æ–≤–≥–æ—Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫—É –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º –≤—Ç—Ä—É—á–∞–Ω–Ω—è–º
"""
import asyncio
import sys
import os
from datetime import datetime
from pathlib import Path

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from simple_trading_bot import SimpleTradingBot
from telegram_bot import telegram_notifier
import logging

# –†–æ–∑—à–∏—Ä–µ–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è —É —Ñ–∞–π–ª + –∫–æ–Ω—Å–æ–ª—å
log_dir = Path('logs')
log_dir.mkdir(exist_ok=True)
log_file = log_dir / f'night_trading_{datetime.now().strftime("%Y%m%d_%H%M%S")}.log'

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(log_file),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –¥–ª—è –Ω—ñ—á–Ω–æ—ó —Ç–æ—Ä–≥—ñ–≤–ª—ñ
NIGHT_CONFIG = {
    'symbols': [
        'BTCUSDT',    # 81% accuracy - –¢–û–ü
        'ETHUSDT',    # –í–∏—Å–æ–∫–∞ –ª—ñ–∫–≤—ñ–¥–Ω—ñ—Å—Ç—å
        'BNBUSDT',    # –°—Ç–∞–±—ñ–ª—å–Ω–∞
        'ADAUSDT',    # –î–æ–±—Ä–∞ —Ç–æ—á–Ω—ñ—Å—Ç—å
        'XRPUSDT',    # –õ—ñ–∫–≤—ñ–¥–Ω–∞
        'DOTUSDT',    # –ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∞
    ],
    'min_confidence': 0.75,      # 75% –≤–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å (–±–∞–ª–∞–Ω—Å –º—ñ–∂ —è–∫—ñ—Å—Ç—é —Ç–∞ —á–∞—Å—Ç–æ—Ç–æ—é)
    'position_size_usd': 50.0,   # $50 –Ω–∞ –ø–æ–∑–∏—Ü—ñ—é
    'leverage': 25,              # 25x –ø–ª–µ—á–µ
    'check_interval': 900,       # 15 —Ö–≤–∏–ª–∏–Ω (900 —Å–µ–∫) - –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ –¥–ª—è 4h timeframe
    'use_mtf': True,             # Multi-timeframe –∞–Ω–∞–ª—ñ–∑
    'enable_websocket': True,    # Real-time –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –æ—Ä–¥–µ—Ä—ñ–≤
}

async def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –Ω—ñ—á–Ω–æ—ó —Ç–æ—Ä–≥—ñ–≤–ª—ñ"""
    
    logger.info("="*80)
    logger.info("üåô –ó–ê–ü–£–°–ö –ù–Ü–ß–ù–û–ì–û –†–ï–ñ–ò–ú–£ –¢–û–†–ì–Ü–í–õ–Ü")
    logger.info("="*80)
    logger.info(f"üìÖ –°—Ç–∞—Ä—Ç: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    logger.info(f"üìù –õ–æ–≥ —Ñ–∞–π–ª: {log_file}")
    logger.info(f"üìä –°–∏–º–≤–æ–ª–∏: {', '.join(NIGHT_CONFIG['symbols'])}")
    logger.info(f"üéØ Min confidence: {NIGHT_CONFIG['min_confidence']:.0%}")
    logger.info(f"üí∞ Position size: ${NIGHT_CONFIG['position_size_usd']}")
    logger.info(f"‚ö° Leverage: {NIGHT_CONFIG['leverage']}x")
    logger.info(f"‚è±Ô∏è  Check interval: {NIGHT_CONFIG['check_interval']}s ({NIGHT_CONFIG['check_interval']/60:.0f} —Ö–≤)")
    logger.info(f"üîÑ MTF Analysis: {'‚úÖ' if NIGHT_CONFIG['use_mtf'] else '‚ùå'}")
    logger.info(f"üîå WebSocket: {'‚úÖ' if NIGHT_CONFIG['enable_websocket'] else '‚ùå'}")
    logger.info("="*80 + "\n")
    
    # Telegram notification –ø—Ä–æ —Å—Ç–∞—Ä—Ç
    await telegram_notifier.send_message(
        f"üåô –ù–Ü–ß–ù–ê –¢–û–†–ì–Ü–í–õ–Ø –†–û–ó–ü–û–ß–ê–¢–ê\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üìÖ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        f"üìä –°–∏–º–≤–æ–ª—ñ–≤: {len(NIGHT_CONFIG['symbols'])}\n"
        f"üí∞ Position: ${NIGHT_CONFIG['position_size_usd']} ({NIGHT_CONFIG['leverage']}x)\n"
        f"üéØ Min confidence: {NIGHT_CONFIG['min_confidence']:.0%}\n"
        f"‚è±Ô∏è Interval: {NIGHT_CONFIG['check_interval']/60:.0f} —Ö–≤\n"
        f"üîÑ MTF: {'‚úÖ' if NIGHT_CONFIG['use_mtf'] else '‚ùå'}\n"
        f"\nüõ°Ô∏è –ó–ê–•–ò–°–¢:\n"
        f"‚Ä¢ Cooldown SL: 1 –≥–æ–¥\n"
        f"‚Ä¢ Cooldown TP: 30 —Ö–≤\n"
        f"‚Ä¢ Max –≤—Ç—Ä–∞—Ç/–¥–µ–Ω—å: 3\n"
        f"\n‚ö†Ô∏è –ë–ï–ó –ë–î - –≤—Å—ñ –¥–∞–Ω—ñ –≤ –ø–∞–º'—è—Ç—ñ"
    )
    
    try:
        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
        bot = SimpleTradingBot(
            symbols=NIGHT_CONFIG['symbols'],
            testnet=True,
            enable_trading=True  # ‚úÖ –†–ï–ê–õ–¨–ù–ê –¢–û–†–ì–Ü–í–õ–Ø –Ω–∞ testnet
        )
        
        # –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
        bot.min_confidence = NIGHT_CONFIG['min_confidence']
        bot.position_size_usd = NIGHT_CONFIG['position_size_usd']
        bot.leverage = NIGHT_CONFIG['leverage']
        bot.use_mtf = NIGHT_CONFIG['use_mtf']
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        logger.info("üöÄ –ë–æ—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ, –∑–∞–ø—É—Å–∫–∞—é –≥–æ–ª–æ–≤–Ω–∏–π —Ü–∏–∫–ª...\n")
        await bot.run(interval_seconds=NIGHT_CONFIG['check_interval'])
        
    except KeyboardInterrupt:
        logger.info("\nüõë –ù—ñ—á–Ω–∞ —Ç–æ—Ä–≥—ñ–≤–ª—è –∑—É–ø–∏–Ω–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º (Ctrl+C)")
        await telegram_notifier.send_message(
            f"üõë –ù–Ü–ß–ù–ê –¢–û–†–ì–Ü–í–õ–Ø –ó–£–ü–ò–ù–ï–ù–ê\n"
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"‚è∞ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
            f"üë§ –ó—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"
        )
        
    except Exception as e:
        logger.error(f"\n‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê: {e}", exc_info=True)
        await telegram_notifier.send_message(
            f"‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê\n"
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"‚è∞ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
            f"üî• {str(e)[:200]}\n"
            f"\n‚ö†Ô∏è –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ"
        )
        raise
    
    finally:
        logger.info(f"\n{'='*80}")
        logger.info(f"üìÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        logger.info(f"üìù –õ–æ–≥ –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {log_file}")
        logger.info(f"{'='*80}\n")


if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
    except Exception as e:
        print(f"\n‚ùå –§–∞—Ç–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        sys.exit(1)
