-- ============================================================================
-- üìä TRADING DATABASE SCHEMA
-- ============================================================================
-- –ü–æ–≤–Ω–∞ —Å—Ö–µ–º–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏
-- –í–∫–ª—é—á–∞—î: –ø–æ–∑–∏—Ü—ñ—ó, —Ç—Ä–µ–π–¥–∏, —ñ—Å—Ç–æ—Ä—ñ—é –∑–º—ñ–Ω, –∞–Ω–∞–ª—ñ—Ç–∏–∫—É PnL
-- ============================================================================

-- –í–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö —Ç–∞–±–ª–∏—Ü—å (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—á–∞—Ç–∏ –∑ —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞)
DROP TABLE IF EXISTS position_history CASCADE;
DROP TABLE IF EXISTS trades CASCADE;
DROP TABLE IF EXISTS positions CASCADE;
DROP TABLE IF EXISTS trading_sessions CASCADE;

-- ============================================================================
-- 1. TRADING SESSIONS - —Ç–æ—Ä–≥–æ–≤—ñ —Å–µ—Å—ñ—ó
-- ============================================================================
CREATE TABLE trading_sessions (
    id SERIAL PRIMARY KEY,
    session_start TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    session_end TIMESTAMP WITH TIME ZONE,
    initial_balance DECIMAL(20, 8) NOT NULL,
    final_balance DECIMAL(20, 8),
    total_trades INTEGER DEFAULT 0,
    winning_trades INTEGER DEFAULT 0,
    losing_trades INTEGER DEFAULT 0,
    total_pnl DECIMAL(20, 8) DEFAULT 0,
    max_drawdown DECIMAL(10, 4) DEFAULT 0,
    status VARCHAR(20) DEFAULT 'active' CHECK (status IN ('active', 'paused', 'stopped')),
    notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_sessions_status ON trading_sessions(status);
CREATE INDEX idx_sessions_start ON trading_sessions(session_start DESC);

-- ============================================================================
-- 2. POSITIONS - –ø–æ–∑–∏—Ü—ñ—ó (–≤—ñ–¥–∫—Ä–∏—Ç—ñ/–∑–∞–∫—Ä–∏—Ç—ñ)
-- ============================================================================
CREATE TABLE positions (
    id SERIAL PRIMARY KEY,
    session_id INTEGER REFERENCES trading_sessions(id) ON DELETE SET NULL,
    
    -- –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    symbol VARCHAR(20) NOT NULL,
    side VARCHAR(10) NOT NULL CHECK (side IN ('LONG', 'SHORT')),
    status VARCHAR(20) NOT NULL DEFAULT 'open' CHECK (status IN ('open', 'closed', 'liquidated')),
    
    -- –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤—Ö–æ–¥—É
    entry_price DECIMAL(20, 8) NOT NULL,
    quantity DECIMAL(20, 8) NOT NULL,
    leverage INTEGER NOT NULL DEFAULT 1,
    entry_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    
    -- –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∏—Ö–æ–¥—É
    exit_price DECIMAL(20, 8),
    exit_time TIMESTAMP WITH TIME ZONE,
    exit_reason VARCHAR(100),  -- –ë–µ–∑ constraint - –¥–æ–∑–≤–æ–ª—è—î–º–æ –±—É–¥—å-—è–∫—ñ –ø—Ä–∏—á–∏–Ω–∏
    
    -- –ó–∞—Ö–∏—Å—Ç (SL/TP)
    stop_loss_price DECIMAL(20, 8),
    take_profit_price DECIMAL(20, 8),
    trailing_stop_active BOOLEAN DEFAULT FALSE,
    trailing_stop_distance DECIMAL(10, 4),
    best_price DECIMAL(20, 8),  -- –ù–∞–π–∫—Ä–∞—â–∞ —Ü—ñ–Ω–∞ –¥–ª—è trailing stop
    
    -- PnL
    realized_pnl DECIMAL(20, 8),
    realized_pnl_pct DECIMAL(10, 4),
    fees DECIMAL(20, 8) DEFAULT 0,
    
    -- ML –ø—Ä–æ–≥–Ω–æ–∑ (—â–æ —Å–ø—Ä–∏—á–∏–Ω–∏–≤ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è)
    ml_prediction VARCHAR(10) CHECK (ml_prediction IN ('UP', 'DOWN')),
    ml_confidence DECIMAL(5, 4),
    ml_features JSONB,  -- –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ—ñ—á–µ–π –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É
    
    -- Binance –¥–∞–Ω—ñ
    binance_order_id BIGINT,
    binance_position_id BIGINT,
    
    -- –ú–µ—Ç–∞–¥–∞–Ω—ñ
    notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –ø–æ—à—É–∫—É
CREATE INDEX idx_positions_symbol ON positions(symbol);
CREATE INDEX idx_positions_status ON positions(status);
CREATE INDEX idx_positions_side ON positions(side);
CREATE INDEX idx_positions_entry_time ON positions(entry_time DESC);
CREATE INDEX idx_positions_exit_time ON positions(exit_time DESC);
CREATE INDEX idx_positions_session ON positions(session_id);
CREATE INDEX idx_positions_open ON positions(symbol, status) WHERE status = 'open';

-- ============================================================================
-- 3. TRADES - –æ–∫—Ä–µ–º—ñ —Ç—Ä–µ–π–¥–∏ (–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –æ—Ä–¥–µ—Ä—ñ–≤)
-- ============================================================================
CREATE TABLE trades (
    id SERIAL PRIMARY KEY,
    position_id INTEGER REFERENCES positions(id) ON DELETE CASCADE,
    
    -- –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    symbol VARCHAR(20) NOT NULL,
    side VARCHAR(10) NOT NULL CHECK (side IN ('BUY', 'SELL')),
    trade_type VARCHAR(20) NOT NULL CHECK (trade_type IN (
        'OPEN', 'CLOSE', 'PARTIAL_CLOSE', 'ADD', 'REDUCE'
    )),
    
    -- –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç—Ä–µ–π–¥—É
    price DECIMAL(20, 8) NOT NULL,
    quantity DECIMAL(20, 8) NOT NULL,
    quote_quantity DECIMAL(20, 8) NOT NULL,  -- –í–∞—Ä—Ç—ñ—Å—Ç—å –≤ USDT
    
    -- PnL –¥–ª—è –∑–∞–∫—Ä–∏–≤–∞—é—á–∏—Ö —Ç—Ä–µ–π–¥—ñ–≤
    realized_pnl DECIMAL(20, 8),
    fee DECIMAL(20, 8) DEFAULT 0,
    fee_asset VARCHAR(10) DEFAULT 'USDT',
    
    -- Binance –¥–∞–Ω—ñ
    binance_trade_id BIGINT UNIQUE,
    binance_order_id BIGINT,
    is_maker BOOLEAN DEFAULT FALSE,
    
    -- –ß–∞—Å
    trade_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- –Ü–Ω–¥–µ–∫—Å–∏
CREATE INDEX idx_trades_position ON trades(position_id);
CREATE INDEX idx_trades_symbol ON trades(symbol);
CREATE INDEX idx_trades_time ON trades(trade_time DESC);
CREATE INDEX idx_trades_binance_id ON trades(binance_trade_id);

-- ============================================================================
-- 4. POSITION_HISTORY - —ñ—Å—Ç–æ—Ä—ñ—è –∑–º—ñ–Ω –ø–æ–∑–∏—Ü—ñ–π
-- ============================================================================
CREATE TABLE position_history (
    id SERIAL PRIMARY KEY,
    position_id INTEGER REFERENCES positions(id) ON DELETE CASCADE,
    
    -- –©–æ –∑–º—ñ–Ω–∏–ª–æ—Å—è
    event_type VARCHAR(30) NOT NULL CHECK (event_type IN (
        'OPEN', 'CLOSE', 'UPDATE_SL', 'UPDATE_TP', 
        'ACTIVATE_TRAILING', 'UPDATE_TRAILING', 
        'PNL_UPDATE', 'REVERSE', 'FORCE_CLOSE'
    )),
    
    -- –î–∞–Ω—ñ –¥–æ –∑–º—ñ–Ω–∏
    old_status VARCHAR(20),
    old_stop_loss DECIMAL(20, 8),
    old_take_profit DECIMAL(20, 8),
    old_trailing_active BOOLEAN,
    
    -- –î–∞–Ω—ñ –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏
    new_status VARCHAR(20),
    new_stop_loss DECIMAL(20, 8),
    new_take_profit DECIMAL(20, 8),
    new_trailing_active BOOLEAN,
    
    -- –ü–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ
    current_price DECIMAL(20, 8),
    unrealized_pnl DECIMAL(20, 8),
    unrealized_pnl_pct DECIMAL(10, 4),
    
    -- –ü—Ä–∏—á–∏–Ω–∞ –∑–º—ñ–Ω–∏
    reason TEXT,
    triggered_by VARCHAR(20) CHECK (triggered_by IN (
        'SYSTEM', 'USER', 'ML_SIGNAL', 'WEBSOCKET', 'MONITOR'
    )),
    
    -- –ß–∞—Å
    event_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- –Ü–Ω–¥–µ–∫—Å–∏
CREATE INDEX idx_history_position ON position_history(position_id);
CREATE INDEX idx_history_event ON position_history(event_type);
CREATE INDEX idx_history_time ON position_history(event_time DESC);

-- ============================================================================
-- 5. PNL_ANALYTICS - –∞–≥—Ä–µ–≥–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏
-- ============================================================================
CREATE TABLE pnl_analytics (
    id SERIAL PRIMARY KEY,
    
    -- –ü–µ—Ä—ñ–æ–¥
    period_type VARCHAR(10) NOT NULL CHECK (period_type IN ('DAILY', 'WEEKLY', 'MONTHLY')),
    period_start TIMESTAMP WITH TIME ZONE NOT NULL,
    period_end TIMESTAMP WITH TIME ZONE NOT NULL,
    
    -- –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_trades INTEGER DEFAULT 0,
    winning_trades INTEGER DEFAULT 0,
    losing_trades INTEGER DEFAULT 0,
    win_rate DECIMAL(5, 2),
    
    -- PnL
    total_pnl DECIMAL(20, 8) DEFAULT 0,
    gross_profit DECIMAL(20, 8) DEFAULT 0,
    gross_loss DECIMAL(20, 8) DEFAULT 0,
    profit_factor DECIMAL(10, 2),
    
    -- –°–µ—Ä–µ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
    avg_win DECIMAL(20, 8),
    avg_loss DECIMAL(20, 8),
    avg_trade_duration INTEGER,  -- —Ö–≤–∏–ª–∏–Ω–∏
    
    -- –ï–∫—Å—Ç—Ä–µ–º—É–º–∏
    best_trade DECIMAL(20, 8),
    worst_trade DECIMAL(20, 8),
    max_consecutive_wins INTEGER,
    max_consecutive_losses INTEGER,
    max_drawdown DECIMAL(10, 4),
    
    -- –ü–æ —Å–∏–º–≤–æ–ª–∞—Ö (—Ç–æ–ø 5)
    top_symbols JSONB,
    
    -- –ß–∞—Å
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    
    UNIQUE(period_type, period_start)
);

CREATE INDEX idx_analytics_period ON pnl_analytics(period_type, period_start DESC);

-- ============================================================================
-- –¢–†–ò–ì–ï–†–ò –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ù–û–ì–û –û–ù–û–í–õ–ï–ù–ù–Ø updated_at
-- ============================================================================

-- –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –¢—Ä–∏–≥–µ—Ä–∏
CREATE TRIGGER update_sessions_updated_at
    BEFORE UPDATE ON trading_sessions
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_positions_updated_at
    BEFORE UPDATE ON positions
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- ============================================================================
-- –§–£–ù–ö–¶–Ü–á –î–õ–Ø –ê–ù–ê–õ–Ü–¢–ò–ö–ò
-- ============================================================================

-- –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É PnL –ø–æ —Å–∏–º–≤–æ–ª—É
CREATE OR REPLACE FUNCTION calculate_symbol_pnl(
    p_symbol VARCHAR,
    p_start_date TIMESTAMP WITH TIME ZONE DEFAULT NULL,
    p_end_date TIMESTAMP WITH TIME ZONE DEFAULT NULL
)
RETURNS TABLE (
    symbol VARCHAR,
    total_trades BIGINT,
    winning_trades BIGINT,
    total_pnl NUMERIC,
    win_rate NUMERIC
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        p_symbol,
        COUNT(*)::BIGINT,
        COUNT(*) FILTER (WHERE realized_pnl > 0)::BIGINT,
        COALESCE(SUM(realized_pnl), 0),
        CASE 
            WHEN COUNT(*) > 0 THEN 
                (COUNT(*) FILTER (WHERE realized_pnl > 0)::NUMERIC / COUNT(*)::NUMERIC * 100)
            ELSE 0 
        END
    FROM positions
    WHERE 
        positions.symbol = p_symbol
        AND status = 'closed'
        AND (p_start_date IS NULL OR exit_time >= p_start_date)
        AND (p_end_date IS NULL OR exit_time <= p_end_date);
END;
$$ LANGUAGE plpgsql;

-- –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö –ø–æ–∑–∏—Ü—ñ–π
CREATE OR REPLACE FUNCTION get_open_positions()
RETURNS TABLE (
    position_id INTEGER,
    symbol VARCHAR,
    side VARCHAR,
    entry_price NUMERIC,
    quantity NUMERIC,
    leverage INTEGER,
    entry_time TIMESTAMP WITH TIME ZONE,
    stop_loss_price NUMERIC,
    take_profit_price NUMERIC,
    trailing_stop_active BOOLEAN
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        p.id,
        p.symbol,
        p.side,
        p.entry_price,
        p.quantity,
        p.leverage,
        p.entry_time,
        p.stop_loss_price,
        p.take_profit_price,
        p.trailing_stop_active
    FROM positions p
    WHERE p.status = 'open'
    ORDER BY p.entry_time DESC;
END;
$$ LANGUAGE plpgsql;

-- ============================================================================
-- –ü–û–ß–ê–¢–ö–û–í–Ü –î–ê–ù–Ü
-- ============================================================================

-- –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É —Å–µ—Å—ñ—é
INSERT INTO trading_sessions (initial_balance, status, notes)
VALUES (10000.00, 'active', '–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ç–æ—Ä–≥–æ–≤–∞ —Å–µ—Å—ñ—è');

-- ============================================================================
-- –ü–†–ê–í–ê –î–û–°–¢–£–ü–£ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ, —è–∫—â–æ —î –æ–∫—Ä–µ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á)
-- ============================================================================
-- GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO trading_bot_user;
-- GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO trading_bot_user;

-- ============================================================================
-- –ö–û–ú–ï–ù–¢–ê–†–Ü
-- ============================================================================
COMMENT ON TABLE positions IS '–¢–æ—Ä–≥–æ–≤—ñ –ø–æ–∑–∏—Ü—ñ—ó (–≤—ñ–¥–∫—Ä–∏—Ç—ñ/–∑–∞–∫—Ä–∏—Ç—ñ)';
COMMENT ON TABLE trades IS '–û–∫—Ä–µ–º—ñ —Ç—Ä–µ–π–¥–∏ (–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –æ—Ä–¥–µ—Ä—ñ–≤)';
COMMENT ON TABLE position_history IS '–Ü—Å—Ç–æ—Ä—ñ—è –≤—Å—ñ—Ö –∑–º—ñ–Ω –ø–æ–∑–∏—Ü—ñ–π';
COMMENT ON TABLE trading_sessions IS '–¢–æ—Ä–≥–æ–≤—ñ —Å–µ—Å—ñ—ó';
COMMENT ON TABLE pnl_analytics IS '–ê–≥—Ä–µ–≥–æ–≤–∞–Ω–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ PnL';

COMMENT ON COLUMN positions.ml_features IS 'JSON –∑ ML —Ñ—ñ—á–∞–º–∏ —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∏—Å—è –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑—É';
COMMENT ON COLUMN positions.trailing_stop_active IS '–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π trailing stop –¥–ª—è —Ü—ñ—î—ó –ø–æ–∑–∏—Ü—ñ—ó';
COMMENT ON COLUMN positions.best_price IS '–ù–∞–π–∫—Ä–∞—â–∞ —Ü—ñ–Ω–∞ –¥–æ—Å—è–≥–Ω—É—Ç–∞ –ø–æ–∑–∏—Ü—ñ—î—é (–¥–ª—è trailing stop)';

-- ============================================================================
-- –í–ò–í–ï–î–ï–ù–ù–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ò
-- ============================================================================
DO $$
BEGIN
    RAISE NOTICE '‚úÖ –°—Ö–µ–º–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Å—Ç–≤–æ—Ä–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!';
    RAISE NOTICE '';
    RAISE NOTICE 'üìä –°—Ç–≤–æ—Ä–µ–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ:';
    RAISE NOTICE '   ‚Ä¢ trading_sessions - —Ç–æ—Ä–≥–æ–≤—ñ —Å–µ—Å—ñ—ó';
    RAISE NOTICE '   ‚Ä¢ positions - –ø–æ–∑–∏—Ü—ñ—ó';
    RAISE NOTICE '   ‚Ä¢ trades - —Ç—Ä–µ–π–¥–∏';
    RAISE NOTICE '   ‚Ä¢ position_history - —ñ—Å—Ç–æ—Ä—ñ—è –∑–º—ñ–Ω';
    RAISE NOTICE '   ‚Ä¢ pnl_analytics - –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞';
    RAISE NOTICE '';
    RAISE NOTICE 'üîß –°—Ç–≤–æ—Ä–µ–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:';
    RAISE NOTICE '   ‚Ä¢ calculate_symbol_pnl() - —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ PnL –ø–æ —Å–∏–º–≤–æ–ª—É';
    RAISE NOTICE '   ‚Ä¢ get_open_positions() - –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö –ø–æ–∑–∏—Ü—ñ–π';
    RAISE NOTICE '';
    RAISE NOTICE 'üìà –ì–æ—Ç–æ–≤–æ –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!';
END $$;
