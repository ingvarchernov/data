#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üîß –¶–ï–ù–¢–†–ê–õ–Ü–ó–û–í–ê–ù–ê –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø –°–ò–°–¢–ï–ú–ò
–í—Å—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤ –æ–¥–Ω–æ–º—É –º—ñ—Å—Ü—ñ
"""
import os
from dotenv import load_dotenv
from model_scanner import get_available_models

load_dotenv()

# ============================================================================
# BINANCE API
# ============================================================================
BINANCE_CONFIG = {
    'api_key': os.getenv('FUTURES_API_KEY'),
    'api_secret': os.getenv('FUTURES_API_SECRET'),
    'testnet': True,  # –¢—ñ–ª—å–∫–∏ testnet –¥–ª—è –±–µ–∑–ø–µ–∫–∏
}

# ============================================================================
# –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ï –í–ò–Ø–í–õ–ï–ù–ù–Ø –ú–û–î–ï–õ–ï–ô
# ============================================================================
# –¢—ñ–ª—å–∫–∏ –ø–∞—Ä–∏ –∑ —Ö–æ—Ä–æ—à–∏–º–∏ –º–æ–¥–µ–ª—è–º–∏ –Ω–∞ 15m+1h (–ë–ï–ó BNBUSDT - –Ω–µ—Å—Ç–∞–±—ñ–ª—å–Ω–∞ –≤ testnet)
TRADING_SYMBOLS = [
    # –¢–û–ü-2: –í—ñ–¥–º—ñ–Ω–Ω—ñ –Ω–∞ –≤—Å—ñ—Ö —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞—Ö
    'BTCUSDT',   # 93% (15m), 86% (1h) - –ù–ê–ô–ö–†–ê–©–ê
    'TRXUSDT',   # 86% (15m), 79% (1h) - –°–¢–ê–ë–Ü–õ–¨–ù–ê
    
    # –î–æ–¥–∞—Ç–∫–æ–≤—ñ: –•–æ—Ä–æ—à—ñ –º–æ–¥–µ–ª—ñ
    'SOLUSDT',   # 76% (15m), 67% (1h) - –≤–æ–ª–∞—Ç—ñ–ª—å–Ω–∞
    'XRPUSDT',   # 70% (15m), 65% (1h) - –±–∞–Ω–∫—ñ–≤—Å—å–∫–∞
    'ETHUSDT',   # 67% (15m), 65% (1h) - —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∏
    # 'BNBUSDT' –í–ò–î–ê–õ–ï–ù–û - –≤ testnet –∂–∞—Ö–ª–∏–≤–æ —Å–∫–∞—á–µ, —Å—Ç–≤–æ—Ä—é—î phantom shorts
]

# ============================================================================
# TRADING PARAMETERS
# ============================================================================
TRADING_CONFIG = {
    # –û—Å–Ω–æ–≤–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ - –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—å
    'symbols': TRADING_SYMBOLS,  # 10 –ø–∞—Ä (5 —Å—Ç–∞–±—ñ–ª—å–Ω–∏—Ö + 5 –≤–æ–ª–∞—Ç—ñ–ª—å–Ω–∏—Ö)
    
    # –†–∏–∑–∏–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç (–û–ü–¢–ò–ú–Ü–ó–û–í–ê–ù–û –î–õ–Ø 15m-1h-4h)
    'leverage': 25,                     # –ü–ª–µ—á–µ 25x
    'position_size_usd': 1250,          # $1250 –Ω–∞ –ø–æ–∑–∏—Ü—ñ—é
    'stop_loss_pct': 0.020,             # SL 2.0% = 50% –≤—Ç—Ä–∞—Ç–∏ (–¥–∞—Ç–∏ —Ä—É—Ö–∞—Ç–∏—Å—å!)
    'take_profit_pct': 0.025,           # TP 2.5% = 62.5% –ø—Ä–∏–±—É—Ç–∫—É (–±—ñ–ª—å—à–∏–π –ø–æ—Ç–µ–Ω—Ü—ñ–∞–ª)
    'max_positions': 9,                 # 9 –∑–≤–∏—á–∞–π–Ω–∏—Ö + 1 —Ä–µ–∑–µ—Ä–≤ –¥–ª—è —Ä–æ–∑–≤–æ—Ä–æ—Ç—É
    'reserve_slot_for_reversal': True,  # üîÑ –ó–∞–≤–∂–¥–∏ –∑–∞–ª–∏—à–∞—Ç–∏ 1 —Å–ª–æ—Ç –≤—ñ–ª—å–Ω–∏–º –¥–ª—è —Ä–æ–∑–≤–æ—Ä–æ—Ç—É
    
    # üîÑ –†–û–ó–í–û–†–û–¢ –ü–û–ó–ò–¶–Ü–ô: –∞–≥—Ä–µ—Å–∏–≤–Ω—ñ—à—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è —à–≤–∏–¥—à–æ—ó —Ä–µ–∞–∫—Ü—ñ—ó
    'reverse_on_strong_signal': True,      # –ó–∞–∫—Ä–∏–≤–∞—Ç–∏ + –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ –∑–≤–æ—Ä–æ—Ç–Ω—é —É–≥–æ–¥—É
    'reverse_min_confidence': 0.70,        # 70% –≤–ø–µ–≤–Ω–µ–Ω–æ—Å—Ç—ñ
    'reverse_profit_threshold': -0.005,    # —è–∫—â–æ PnL < -0.5% (—Ä–∞–Ω—ñ—à–µ —Ä–µ–∞–≥—É—î–º–æ)
    
    # –í–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∏ (–ü–Ü–î–í–ò–©–ï–ù–û –¥–ª—è —è–∫—ñ—Å–Ω–∏—Ö —Å–∏–≥–Ω–∞–ª—ñ–≤)
    'min_confidence': 0.70,          # 70% (–ø—ñ–¥–≤–∏—â–µ–Ω–æ - —Ñ—ñ–ª—å—Ç—Ä—É—î–º–æ —Å–ª–∞–±–∫—ñ —Å–∏–≥–Ω–∞–ª–∏)
    'min_consensus': 0.85,           # 85% –∫–æ–Ω—Å–µ–Ω—Å—É—Å (15m+1h –ø–æ–≤–∏–Ω–Ω—ñ –ø–æ–≥–æ–¥–∂—É–≤–∞—Ç–∏—Å—å)
    
    # –ó–∞—Ö–∏—Å—Ç
    'max_daily_losses_per_symbol': 2,  # –ú–∞–∫—Å–∏–º—É–º 2 –ø—Ä–æ–≥—Ä–∞—à—ñ –Ω–∞ –¥–µ–Ω—å (–±—É–ª–æ 3)
    'cooldown_after_sl': 3600,         # 1 –≥–æ–¥–∏–Ω–∞ –ø—ñ—Å–ª—è SL
    'cooldown_after_tp': 1800,         # 30 —Ö–≤–∏–ª–∏–Ω –ø—ñ—Å–ª—è TP
    'cooldown_after_force_close': 10800, # 3 –≥–æ–¥–∏–Ω–∏ –ø—ñ—Å–ª—è force close (–±—É–ª–æ 2 –≥–æ–¥–∏–Ω–∏!)
    'max_loss_per_symbol_pct': 0.03,   # –ú–∞–∫—Å–∏–º—É–º -3% –∑–∞ –¥–µ–Ω—å (–±—É–ª–æ -5%)
    
    # –¢–∞–π–º—ñ–Ω–≥–∏ (–®–í–ò–î–ö–ê –†–ï–ê–ö–¶–Ü–Ø)
    'check_interval': 300,             # 5 —Ö–≤–∏–ª–∏–Ω –º—ñ–∂ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞–º–∏ (–±—É–ª–æ 15—Ö–≤)
    
    # –ê–¥–∞–ø—Ç–∞—Ü—ñ—è –¥–æ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—ñ (–Ω—ñ—á–Ω–∏–π —Ä–µ–∂–∏–º)
    'night_mode': {
        'enabled': True,
        'start_hour': 0,                   # 00:00
        'end_hour': 8,                     # 08:00
        'interval_multiplier': 1.5,        # –ó–±—ñ–ª—å—à–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞ 50%
        'min_confidence_boost': 0.05,      # –î–æ–¥–∞—Ç–∏ 5% –¥–æ –≤–ø–µ–≤–Ω–µ–Ω–æ—Å—Ç—ñ
    },
    
    # –í–æ–ª–∞—Ç–∏–ª—å–Ω—ñ—Å—Ç—å (–¥–∏–Ω–∞–º—ñ—á–Ω–∏–π –≤–∏–±—ñ—Ä –º–æ–Ω–µ—Ç)
    'volatility_scan': {
        'enabled': True,                   # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Å–∫–∞–Ω–µ—Ä –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—ñ
        'scan_interval': 3600,             # –°–∫–∞–Ω—É–≤–∞—Ç–∏ –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É
        'min_score': 35.0,                 # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Å–∫–æ—Ä –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—ñ (30-50)
        'top_count': 8,                    # –¢–æ—Ä–≥—É–≤–∞—Ç–∏ —Ç–æ–ø 8 –º–æ–Ω–µ—Ç
        'require_volume': 5_000_000,       # –ú—ñ–Ω—ñ–º—É–º $5M –æ–±'—î–º—É –∑–∞ 24h
    },
    'min_volatility_score': 25.0,         # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Å–∫–æ—Ä –¥–ª—è —Ç–æ—Ä–≥—ñ–≤–ª—ñ (—Ñ—ñ–ª—å—Ç—Ä –º–µ—Ä—Ç–≤–∏—Ö –ø–∞—Ä)
    
    # Trailing stop –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –ø—Ä–∏–±—É—Ç–∫—É (–ó–ë–ê–õ–ê–ù–°–û–í–ê–ù–ò–ô - –¥–∞—Ç–∏ –ø—Ä–∏–±—É—Ç–∫—É –∑—Ä–æ—Å—Ç–∏)
    'trailing_stop': {
        'enabled': True,                   # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ trailing stop
        'activation_profit': 0.015,        # –ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –ø—Ä–∏ +1.5% –ø—Ä–∏–±—É—Ç–∫—É (37.5% –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç)
        'trail_distance': 0.50,            # –ó–∞–∫—Ä–∏–≤–∞—Ç–∏ –ø—Ä–∏ –≤—ñ–¥–∫–∞—Ç—ñ –Ω–∞ 50% –≤—ñ–¥ –ø—ñ–∫—É (–±—ñ–ª—å—à–µ –ø—Ä–æ—Å—Ç–æ—Ä—É)
    }
}

# ============================================================================
# TRADING STRATEGIES (–ù–û–í–ê –°–ò–°–¢–ï–ú–ê)
# ============================================================================
STRATEGY_CONFIG = {
    'enabled': True,  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó
    'fallback_to_ml': True,  # –Ø–∫—â–æ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó –Ω–µ –¥–∞—é—Ç—å —Å–∏–≥–Ω–∞–ª—É - –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ ML
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è Trend Following
    'trend_following': {
        'min_confidence': 65,
        'sma_period': 50,
        'ema_period': 20,
        'rsi_period': 14,
        'rsi_overbought': 70,
        'rsi_oversold': 30,
        'atr_multiplier_sl': 1.5,
        'atr_multiplier_tp': 2.5,
        'trend_strength_threshold': 2.0,
    },
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è Mean Reversion
    'mean_reversion': {
        'min_confidence': 60,
        'bb_period': 20,
        'bb_std': 2,
        'rsi_period': 14,
        'rsi_overbought': 70,
        'rsi_oversold': 30,
        'volume_multiplier': 1.5,
        'sl_percent': 1.5,
        'tp_percent': 2.5,
    },
}

# ============================================================================
# MULTI-TIMEFRAME CONFIGURATION
# ============================================================================
# –û–ù–û–í–õ–ï–ù–û: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç—ñ–ª—å–∫–∏ 15m + 1h (–ë–ï–ó 4h - –º–∞–ª–æ –¥–∞–Ω–∏—Ö)
MTF_CONFIG = {
    '15m': {
        'weight': 0.40,      # 40% - —Ç–æ—á–∫–∏ –≤—Ö–æ–¥—É/–≤–∏—Ö–æ–¥—É (–Ω–∞–π–∫—Ä–∞—â—ñ –º–æ–¥–µ–ª—ñ!)
        'interval': '15m',
        'periods': 96        # 24 –≥–æ–¥–∏–Ω–∏ —ñ—Å—Ç–æ—Ä—ñ—ó
    },
    '1h': {
        'weight': 0.60,      # 60% - –æ—Å–Ω–æ–≤–Ω–∏–π —Ç—Ä–µ–Ω–¥ (–≥–æ–ª–æ–≤–Ω–∏–π —Ç–∞–π–º—Ñ—Ä–µ–π–º)
        'interval': '1h',
        'periods': 24        # 24 –≥–æ–¥–∏–Ω–∏ —ñ—Å—Ç–æ—Ä—ñ—ó
    },
}

# ============================================================================
# DATABASE
# ============================================================================
DATABASE_CONFIG = {
    'enabled': True,
    'url': os.getenv('DATABASE_URL'),
    'pool_size': 20,
    'max_overflow': 30,
    'pool_recycle': 3600,
}

# ============================================================================
# TELEGRAM
# ============================================================================
TELEGRAM_CONFIG = {
    'bot_token': os.getenv('TELEGRAM_BOT_TOKEN'),
    'chat_id': os.getenv('TELEGRAM_CHAT_ID'),
    'enabled': True,
}

# ============================================================================
# LOGGING
# ============================================================================
LOGGING_CONFIG = {
    'level': 'INFO',
    'format': '%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    'log_dir': 'logs',
}

# ============================================================================
# MODELS
# ============================================================================
MODEL_CONFIG = {
    'base_dir': 'models',
    'strategy': 'simple_trend',  # simple_trend_SYMBOL
    'n_features': 82,
}

# ============================================================================
# WEBSOCKET
# ============================================================================
WEBSOCKET_CONFIG = {
    'enabled': True,
    'reconnect_delay': 5,
    'ping_interval': 60,
}

# ============================================================================
# UTILITY FUNCTIONS
# ============================================================================
def get_model_path(symbol: str) -> str:
    """–û—Ç—Ä–∏–º–∞—Ç–∏ —à–ª—è—Ö –¥–æ –º–æ–¥–µ–ª—ñ –¥–ª—è —Å–∏–º–≤–æ–ª–∞"""
    return f"{MODEL_CONFIG['base_dir']}/{MODEL_CONFIG['strategy']}_{symbol}"


def validate_config():
    """–í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"""
    errors = []
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ API –∫–ª—é—á—ñ–≤
    if not BINANCE_CONFIG['api_key']:
        errors.append("‚ùå FUTURES_API_KEY not set")
    if not BINANCE_CONFIG['api_secret']:
        errors.append("‚ùå FUTURES_API_SECRET not set")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Telegram
    if TELEGRAM_CONFIG['enabled']:
        if not TELEGRAM_CONFIG['bot_token']:
            errors.append("‚ùå TELEGRAM_BOT_TOKEN not set")
        if not TELEGRAM_CONFIG['chat_id']:
            errors.append("‚ùå TELEGRAM_CHAT_ID not set")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Database
    if DATABASE_CONFIG['enabled']:
        if not DATABASE_CONFIG['url']:
            errors.append("‚ùå DATABASE_URL not set")
    
    if errors:
        for error in errors:
            print(error)
        raise ValueError("Configuration validation failed")
    
    return True


if __name__ == '__main__':
    # –¢–µ—Å—Ç –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    print("="*70)
    print("üîß –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø –°–ò–°–¢–ï–ú–ò")
    print("="*70)
    
    try:
        validate_config()
        print("\n‚úÖ –í—Å—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–∞–ª—ñ–¥–Ω—ñ")
        
        print(f"\nüìä Trading:")
        print(f"   Symbols: {', '.join(TRADING_CONFIG['symbols'])}")
        print(f"   Position: ${TRADING_CONFIG['position_size_usd']} ({TRADING_CONFIG['leverage']}x)")
        print(f"   Min Confidence: {TRADING_CONFIG['min_confidence']:.0%}")
        
        print(f"\nüîÑ MTF: {'‚úÖ' if MTF_CONFIG['enabled'] else '‚ùå'}")
        print(f"\nüíæ Database: {'‚úÖ' if DATABASE_CONFIG['enabled'] else '‚ùå'}")
        print(f"\nüì± Telegram: {'‚úÖ' if TELEGRAM_CONFIG['enabled'] else '‚ùå'}")
        print(f"\nüîå WebSocket: {'‚úÖ' if WEBSOCKET_CONFIG['enabled'] else '‚ùå'}")
        
    except ValueError as e:
        print(f"\n‚ùå {e}")
        exit(1)
